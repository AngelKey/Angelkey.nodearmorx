// Generated by IcedCoffeeScript 108.0.11
(function() {
  var StreamEncoder, Streamer, enc, stream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  stream = require('stream');

  enc = require('./encoding');

  exports.StreamEncoder = StreamEncoder = (function(_super) {
    __extends(StreamEncoder, _super);

    function StreamEncoder(encoder) {
      this.encoder = encoder;
      StreamEncoder.__super__.constructor.call(this, {
        highWaterMark: Math.floor(4096 / encoder.in_block_len)
      });
    }

    StreamEncoder.prototype._transform = function(chunk, encoding, callback) {
      this.push(this.encoder.encode(chunk));
      return callback;
    };

    return StreamEncoder;

  })(stream.Transform);

  exports.StreamDecoder = Streamer = (function(_super) {
    __extends(Streamer, _super);

    function Streamer(encoder) {
      this.encoder = encoder;
      Streamer.__super__.constructor.call(this, {
        highWaterMark: Math.floor(4096 / encoder.out_block_len)
      });
    }

    Streamer.prototype._transform = function(chunk, encoding, callback) {
      this.push(this.encoder.decode(chunk));
      return callback;
    };

    return Streamer;

  })(stream.Transform);

}).call(this);
